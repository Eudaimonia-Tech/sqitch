name: ðŸš€ Release
on:
  push:
    tags: [v*]
jobs:
  release:
    name: ðŸš€ Release
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - name: Check out the repo
      uses: actions/checkout@v4
    - name: Setup Perl
      id: perl
      uses: shogo82148/actions-setup-perl@v1
      with: { perl-version: latest }
    - name: Cache CPAN Modules
      uses: actions/cache@v3
      with:
        path: local
        key: perl-${{ steps.perl.outputs.perl-hash }}
    - name: Install Prereqs
      run: |
        sudo apt-get update -qq
        sudo env DEBIAN_FRONTEND=noninteractive apt-get install -qq  libicu-dev gettext aspell-en software-properties-common
    - name: Install Dist::Zilla
      run: cpm install --verbose --show-build-log-on-failure --no-test Dist::Zilla
    - name: Install Build Dependencies
      env: { PERL5LIB: "${{ github.workspace }}/local/lib/perl5" }
      run: local/bin/dzil authordeps | xargs cpm install --verbose --show-build-log-on-failure --no-test
    - name: Prepare PAUSE
      env:
        CPAN_USERNAME: ${{ secrets.CPAN_USERNAME }}
        CPAN_PASSWORD: ${{ secrets.CPAN_PASSWORD }}
      run: |
        echo "user $CPAN_USERNAME" > ~/.pause
        echo "password $CPAN_PASSWORD" >> ~/.pause
    - name: Set Local Git User and Email
      run: |
        git config --global user.name "sqitch-github-actions[bot]"
        git config --global user.name "sqitch-github-actions[bot]@users.noreply.github.com"
    - name: Build and Release on CPAN
      id: cpan
      env:
        PERL5LIB: "${{ github.workspace }}/local/lib/perl5"
        DZIL_CONFIRMRELEASE_DEFAULT: "yes"
      run: |
        local/bin/dzil release
        echo "tarball=$( ls App-Sqitch-*.tar.gz )" >> $GITHUB_OUTPUT
    - name: Generate Release Changes
      run: xt/gen_release_changes
    - name: Create GitHub Release
      id: release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body_path: latest_changes.md
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: ./${{ steps.cpan.outputs.tarball }}
        asset_name: ${{ steps.cpan.outputs.tarball }}
        asset_content_type: application/gzip
